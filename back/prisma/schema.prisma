// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      String   @default("user")
  pages     Page[]
}

model Page {
  id          Int         @id @default(autoincrement())
  title       String
  slug        String      @unique
  published   Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      Int
  style       Json?
  user        User        @relation(fields: [userId], references: [id])
  components  Component[]
}

model Component {
  id          Int      @id @default(autoincrement())
  type        String   // 'text', 'link', 'banner', 'carousel'
  order       Int      // Para ordenação dos componentes
  content     String   @db.Text // JSON com as configurações particulares
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  pageId      Int
  page        Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)

  @@index([pageId, order], name: "pageId_order")
}
